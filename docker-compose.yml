services:
  nginx:
    container_name: hugo
    build:
      context: .
      dockerfile: lagoon/nginx.Dockerfile
      args:
        HUGO_BASEURL: ${HUGO_BASEURL}
    labels:
      lagoon.type: nginx
      lagoon.service.usecomposeports: true
    ports:
      - "1313:1313"
    networks:
      - amazeeio-network
      - default
    environment:
      LAGOON_LOCALDEV_HTTP_PORT: "1313"
  umami:
    container_name: umami
    image: ghcr.io/umami-software/umami:postgresql-latest
    ports:
      - "3000:3000"
    environment:
      DATABASE_URL: postgresql://umami:umami@db:5432/umami
      DATABASE_TYPE: postgresql
      APP_SECRET: replace-me-with-a-random-string
      LAGOON_LOCALDEV_HTTP_PORT: "3000"
    labels:
      lagoon.type: node-persistent
      lagoon.persistent: /app/.node_modules
      lagoon.persistent.size: 500Mi
      lagoon.service.usecomposeports: true
    depends_on:
      db:
        condition: service_healthy
    init: true
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "curl http://localhost:3000/api/heartbeat"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - amazeeio-network
      - default
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: umami
      POSTGRES_USER: umami
      POSTGRES_PASSWORD: umami
    labels:
      lagoon.type: postgres-single
    volumes:
      - umami-db-data:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
volumes:
  umami-db-data:

networks:
  amazeeio-network:
    external: true
